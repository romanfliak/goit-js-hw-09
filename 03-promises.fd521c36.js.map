{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC5B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACH,E,MAASC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAEzBA,EAAM,G,CAZbQ,QAAQC,IAAIC,EAAAd,IAoBZ,MAAMe,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAE3CF,EAAKM,iBAAiB,UAGtB,SAAuBC,GACrBA,EAAMC,iBAEN,MAAMC,EAAaC,SAASP,EAAWQ,OACjCC,EAAOF,SAASN,EAAUO,OAC1BE,EAASH,SAASL,EAAYM,OAGpC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAKjC3B,EAJmB2B,EAAI,EACPL,EAAaK,EAAIF,GAIhCG,MAAK,EAAC3B,SAACA,EAAQC,MAACA,MACfU,EAAAd,GAAS+B,OAAOC,QACd,0BAAC7B,QAAsCC,IAAM,IAGhD6B,OAAM,EAAC9B,SAACA,EAAQC,MAACA,MAChBU,EAAAd,GAAS+B,OAAOG,QACpB,6BAAC/B,QAAqCC,OAAY,G,CAGhDW,EAAKoB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconsole.log(Notiflix)\n\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) =>{\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=> {\n      if (shouldResolve) {\n        resolve({position,delay})\n      } else {\n       reject({position, delay});\n      }\n    }, delay)\n  \n  })\n \n  }\n\n \n\nconst form = document.querySelector('.form')\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]')\n\nform.addEventListener('submit',handlerSubmit);\n \n\nfunction handlerSubmit(event) {\n  event.preventDefault();\n\n  const firstDelay = parseInt(inputDelay.value);\n  const step = parseInt(inputStep.value);\n  const amount = parseInt(inputAmount.value);\n\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + i * step;\n\n\n  createPromise(position,delay)\n  .then(({position,delay})=> {\n    Notiflix.Notify.success(\n      ` ✔️ fullfilled promise ${position} in ${delay}`\n    );\n  })\n  .catch(({position,delay})=>{\n    Notiflix.Notify.failure(\n`      ✖️ Rejected promise ${position} in ${delay}ms `    )\n  })\n  }\n  form.reset()\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","$parcel$interopDefault","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","addEventListener","event","preventDefault","firstDelay","parseInt","value","step","amount","i","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.fd521c36.js.map"}