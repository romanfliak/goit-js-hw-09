{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAACH,WAASC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAElBA,E,IAZPQ,QAAQC,IAAIC,EAAAd,IAoBZ,IAAMe,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAE3CF,EAAKM,iBAAiB,UAGtB,SAAuBC,GACrBA,EAAMC,iBAON,IALA,IAAMC,EAAaC,SAASP,EAAWQ,OACjCC,EAAOF,SAASN,EAAUO,OAC1BE,EAASH,SAASL,EAAYM,OAG3BG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAKjC3B,EAJmB2B,EAAI,EACPL,EAAaK,EAAIF,GAIhCG,MAAK,SAAAC,G,IAAE5B,EAAQ4B,EAAR5B,SAASC,EAAK2B,EAAL3B,MACfU,EAAAd,GAASgC,OAAOC,QACd,0BAA6CC,OAAf/B,EAAS,QAAY+B,OAAN9B,G,IAGhD+B,OAAM,SAAAJ,G,IAAE5B,EAAQ4B,EAAR5B,SAASC,EAAK2B,EAAL3B,MAChBU,EAAAd,GAASgC,OAAOI,QACpB,6BAA4CF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,O,IAGhDW,EAAKsB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconsole.log(Notiflix)\n\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) =>{\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=> {\n      if (shouldResolve) {\n        resolve({position,delay})\n      } else {\n       reject({position, delay});\n      }\n    }, delay)\n  \n  })\n \n  }\n\n \n\nconst form = document.querySelector('.form')\nconst inputDelay = document.querySelector('input[name=\"delay\"]');\nconst inputStep = document.querySelector('input[name=\"step\"]');\nconst inputAmount = document.querySelector('input[name=\"amount\"]')\n\nform.addEventListener('submit',handlerSubmit);\n \n\nfunction handlerSubmit(event) {\n  event.preventDefault();\n\n  const firstDelay = parseInt(inputDelay.value);\n  const step = parseInt(inputStep.value);\n  const amount = parseInt(inputAmount.value);\n\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + i * step;\n\n\n  createPromise(position,delay)\n  .then(({position,delay})=> {\n    Notiflix.Notify.success(\n      ` ✔️ fullfilled promise ${position} in ${delay}`\n    );\n  })\n  .catch(({position,delay})=>{\n    Notiflix.Notify.failure(\n`      ✖️ Rejected promise ${position} in ${delay}ms `    )\n  })\n  }\n  form.reset()\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","$parcel$interopDefault","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","addEventListener","event","preventDefault","firstDelay","parseInt","value","step","amount","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.63534f30.js.map"}